kind: pipeline
name: Build and Deploy
type: docker

steps:
  - name: Restore Cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        - ./.next/cache
  - name: Install Dependancies
    pull: if-not-exists
    image: node:lts-alpine
    environment:
      PRISMA_CLI_QUERY_ENGINE_TYPE: binary
      PRISMA_CLIENT_ENGINE_TYPE: binary
    commands:
      - apk add --no-cache libc6-compat
      - yarn install --frozen-lockfile
      - yarn build
  - name: Publish
    image: plugins/docker
    when:
      branch:
        - master
    pull: if-not-exists
    settings:
      username:
        from_secret: github_username
      password:
        from_secret: github_token
      repo: ghcr.io/sebasptsch/nextblog
      registry: ghcr.io
      auto_tag: true

  - name: apply ansible playbook
    image: plugins/ansible
    settings:
      playbook: .ansible/playbook.yml
      galaxy: .ansible/requirements.yml
      inventory: .ansible/inventory
      user: sebas
      private_key:
        from_secret: ansible_private_key
  - name: Rebuild Cache
    image: drillster/drone-volume-cache
    pull: if-not-exists
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./.next/cache

volumes:
  - name: cache
    host:
      path: /tmp/cache
